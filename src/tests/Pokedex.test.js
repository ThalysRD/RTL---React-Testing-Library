import { screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import React from 'react';
import App from '../App';
import renderWithRouter from '../renderWithRouter';

describe('Testa o componente Pokedex.js', () => {
  it('Testa se a página possui o texto "Encountered pokémons"', () => {
    renderWithRouter(<App />);
    const h2El = screen.getByRole('heading', { name: 'Encountered pokémons', level: 2 });
    expect(h2El).toBeInTheDocument();
  });
  it('Testa se é exibido o próximo pokemon da lista, quando o botão for clicado', () => {
    renderWithRouter(<App />);
    const button = screen.getByRole('button', { name: /Próximo pokémon/i });
    const pikachuCheck = screen.getByText('Pikachu');
    expect(pikachuCheck).toBeInTheDocument();
    userEvent.click(button);
    const charmandeCheck = screen.getByText('Charmander');
    expect(charmandeCheck).toBeInTheDocument();
    userEvent.click(button);
    const caterpieCheck = screen.getByText('Caterpie');
    expect(caterpieCheck).toBeInTheDocument();
    userEvent.click(button);
    const ekansCheck = screen.getByText('Ekans');
    expect(ekansCheck).toBeInTheDocument();
    userEvent.click(button);
    const alakazamCheck = screen.getByText('Alakazam');
    expect(alakazamCheck).toBeInTheDocument();
    userEvent.click(button);
    const mewCheck = screen.getByText('Mew');
    expect(mewCheck).toBeInTheDocument();
    userEvent.click(button);
    const rapidashCheck = screen.getByText('Rapidash');
    expect(rapidashCheck).toBeInTheDocument();
    userEvent.click(button);
    const snorlaxCheck = screen.getByText('Snorlax');
    expect(snorlaxCheck).toBeInTheDocument();
    userEvent.click(button);
    const dragonairCheck = screen.getByText('Dragonair');
    expect(dragonairCheck).toBeInTheDocument();
    userEvent.click(button);
    expect(dragonairCheck).not.toBe('Pikachu');
    expect(pikachuCheck).toBeInTheDocument();
  });
  it('Testa se é mostrado apenas um pokemon por vez', () => {
    renderWithRouter(<App />);
    const imgEl = screen.getByRole('img', { name: /sprite/i });
    expect(imgEl).toBeInTheDocument();
  });
  it('Testa se tem botões de filtro', () => {
    renderWithRouter(<App />);
    const buttonTestId = screen.getAllByTestId('pokemon-type-button');
    expect(buttonTestId).toBeDefined();
    const buttonFilterEl = screen.getByRole('button', { name: 'Electric' });
    const buttonFilterEl2 = screen.getByRole('button', { name: 'Fire' });
    const buttonFilterEl3 = screen.getByRole('button', { name: 'Bug' });
    const buttonFilterEl4 = screen.getByRole('button', { name: 'Poison' });
    const buttonFilterEl5 = screen.getByRole('button', { name: 'Psychic' });
    const buttonFilterEl6 = screen.getByRole('button', { name: 'Normal' });
    const buttonFilterEl7 = screen.getByRole('button', { name: 'Dragon' });
    expect(buttonFilterEl).toBeInTheDocument();
    expect(buttonFilterEl2).toBeInTheDocument();
    expect(buttonFilterEl3).toBeInTheDocument();
    expect(buttonFilterEl4).toBeInTheDocument();
    expect(buttonFilterEl5).toBeInTheDocument();
    expect(buttonFilterEl6).toBeInTheDocument();
    expect(buttonFilterEl7).toBeInTheDocument();
    userEvent.click(buttonFilterEl2);
    const charEl = screen.getByText('Charmander');
    expect(charEl).toBeInTheDocument();
    const allButton = screen.getByRole('button', { name: 'All' });
    expect(allButton).toBeInTheDocument();
  });
  it('Testa se a pokédex tem contem um botão pra resetar o filtro', () => {
    renderWithRouter(<App />);
    const allButton = screen.getByRole('button', { name: 'All' });
    expect(allButton).toBeInTheDocument();
    const buttonFilterEl = screen.getByRole('button', { name: 'Electric' });
    expect(buttonFilterEl).toBeInTheDocument();
    userEvent.click(buttonFilterEl);
    const nextEl = screen.getByRole('button', { name: /Próximo/i });
    userEvent.click(allButton);
    userEvent.click(nextEl);
    const charEl = screen.getByText('Charmander');
    expect(charEl).toBeInTheDocument();
  });
});
